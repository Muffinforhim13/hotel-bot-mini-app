#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
"""

import time
import json
from action_recorder import RecordingManager

def test_smart_system():
    """–¢–µ—Å—Ç —É–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üß† –¢–µ—Å—Ç —É–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
    manager = RecordingManager()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        'email': 'test@example.com',
        'password': 'testpassword',
        'hotel_name': '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–µ–ª—å',
        'hotel_address': '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1',
        'hotel_type': '–û—Ç–µ–ª—å',
        'city': '–ú–æ—Å–∫–≤–∞',
        'phone': '+7 999 123-45-67',
        'website': 'https://test-hotel.com',
        'contact_name': '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        'contact_email': 'ivan@test-hotel.com',
        'description': '–û—Ç–ª–∏—á–Ω—ã–π –æ—Ç–µ–ª—å –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞',
        'amenities': 'Wi-Fi, –ü–∞—Ä–∫–æ–≤–∫–∞, –†–µ—Å—Ç–æ—Ä–∞–Ω'
    }
    
    platforms = ['ostrovok', 'bronevik', '101hotels']
    
    print(f"üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {test_data}")
    print(f"üéØ –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã: {', '.join(platforms)}")
    
    results = {}
    
    for platform in platforms:
        print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º {platform.title()}...")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ—Ä–¥–µ—Ä
            recorder = manager.get_recorder(platform)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
            recordings = recorder.get_available_recordings()
            
            if recordings:
                latest_recording = recordings[0]  # –ë–µ—Ä–µ–º —Å–∞–º—ã–π –Ω–æ–≤—ã–π
                print(f"   üìÅ –ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω: {latest_recording['filename']}")
                
                # –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
                success = recorder.load_recording(latest_recording['filepath'])
                
                if success:
                    print(f"   ‚úÖ –®–∞–±–ª–æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–º–µ–Ω—è—é—Ç—Å—è
                    preview = recorder.preview_recording(latest_recording['filepath'])
                    print(f"   üìã –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä: {preview[:100]}...")
                    
                    results[platform] = {
                        'status': 'ready',
                        'template': latest_recording,
                        'message': '–ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é'
                    }
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞")
                    results[platform] = {
                        'status': 'error',
                        'message': '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —à–∞–±–ª–æ–Ω'
                    }
            else:
                print(f"   ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤")
                results[platform] = {
                    'status': 'no_templates',
                    'message': '–°–æ–∑–¥–∞–π—Ç–µ —à–∞–±–ª–æ–Ω —á–µ—Ä–µ–∑ record_actions.py'
                }
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
            results[platform] = {
                'status': 'error',
                'message': str(e)
            }
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print(f"\nüìä –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:")
    print("=" * 30)
    
    ready_count = sum(1 for r in results.values() if r['status'] == 'ready')
    total_count = len(results)
    
    print(f"‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ: {ready_count}/{total_count}")
    
    for platform, result in results.items():
        status_icon = "‚úÖ" if result['status'] == 'ready' else "‚ùå"
        print(f"{status_icon} {platform.title()}: {result['message']}")
    
    if ready_count > 0:
        print(f"\nüéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        print(f"üí° –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Telegram –±–æ—Ç–∞")
    else:
        print(f"\n‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —à–∞–±–ª–æ–Ω—ã:")
        print(f"   python record_actions.py")

def show_platform_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö"""
    print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö:")
    print("=" * 30)
    
    platforms = {
        'ostrovok': {
            'name': 'Ostrovok',
            'url': 'https://extranet.ostrovok.ru',
            'description': '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–µ–ª–µ–π'
        },
        'bronevik': {
            'name': 'Bronevik',
            'url': 'https://extranet.bronevik.com', 
            'description': '–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏'
        },
        '101hotels': {
            'name': '101 Hotels',
            'url': 'https://extranet.101hotels.com',
            'description': '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏'
        }
    }
    
    for platform_id, info in platforms.items():
        print(f"üè® {info['name']}")
        print(f"   üåê {info['url']}")
        print(f"   üìù {info['description']}")
        print()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß† –£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ - –¢–µ—Å—Ç")
    print("=" * 50)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üß™ –¢–µ—Å—Ç —É–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")
        print("2. üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö")
        print("3. ‚ùå –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ").strip()
        
        if choice == '1':
            test_smart_system()
        elif choice == '2':
            show_platform_info()
        elif choice == '3':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    main() 